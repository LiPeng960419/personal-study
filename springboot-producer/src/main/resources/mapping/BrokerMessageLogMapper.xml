<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.coship.producer.mapper.BrokerMessageLogMapper">

        <resultMap id="BaseResultMap" type="com.coship.producer.entity.BrokerMessageLog">
            <result property="messageId" column="message_id" />
            <result property="message" column="message" />
            <result property="tryCount" column="try_count" />
            <result property="status" column="status" />
            <result property="nextRetry" column="next_retry" />
            <result property="createTime" column="create_time" />
            <result property="updateTime" column="update_time" />
        </resultMap>

        <insert id="insert">
            insert into broker_message_log values (#{messageId},#{message},#{tryCount},#{status},#{nextRetry},#{createTime},#{updateTime})
        </insert>

        <select id="queryBrokerMessageById" resultMap="BaseResultMap">
            select message_id, message, try_count, status, next_retry, create_time, update_time
            from broker_message_log bml
            where message_id = #{messageId}
        </select>

        <select id="query4StatusAndTimeoutMessage" resultMap="BaseResultMap">
        <![CDATA[
                select message_id, message, try_count, status, next_retry, create_time, update_time
                from broker_message_log bml
                where status = '0'
                and next_retry <= sysdate()
                ]]>
        </select>

        <update id="update4ReSend" >
                update broker_message_log bml
                set bml.try_count = bml.try_count + 1,
                bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
                where bml.message_id = #{messageId,jdbcType=VARCHAR}
        </update>

        <update id="changeBrokerMessageLogStatus" >
                update broker_message_log bml
                set bml.status = #{status,jdbcType=VARCHAR},
                bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
                where bml.message_id = #{messageId,jdbcType=VARCHAR}
        </update>

</mapper>